import { useState } from 'react'
import Link from 'next/link'
import Image from 'next/image'
import OwnerNavigation from './OwnerNavigation'
import Footer from './Footer'
import styles from '../styles/PropertyAnalytics.module.css'

export default function PropertyAnalytics() {
  const [selectedPeriod, setSelectedPeriod] = useState('monthly')

  const kpiData = [
    {
      title: 'ูุคุดุฑ ุงููุฎุงุทุฑ',
      badge: 'ูุชูุณุท',
      badgeColor: 'yellow',
      value: '42',
      change: '3.5%โ',
      changeColor: 'orange',
      note: 'ุนูุงูู ุฎุทุฑ ุชุญุชุงุฌ ุฅูู ูุนุงูุฌุฉ 3'
    },
    {
      title: 'ุงูุฏุฎู ุงูุดูุฑู',
      value: '125,750 โช',
      change: '8.7%โ',
      changeColor: 'green',
      note: '130,500 ุชููุนุงุช ุงูุดูุฑ ุงููุงุฏู โช',
      hasInfo: true
    },
    {
      title: 'ูุนุฏู ุงูุฅุดุบุงู',
      badge: '5% ุนู ุงูุฑุจุน ุงูุณุงุจู +',
      badgeColor: 'green',
      value: '87%',
      change: '2.3%โ',
      changeColor: 'green',
      progress: 87
    }
  ]

  const topUnits = [
    {
      occupancy: '100%',
      return: '5,800 โช',
      unit: 'ุจุฑุฌ ุงูุณูุงู - ุดูุฉ 501'
    },
    {
      occupancy: '100%',
      return: '4,950 โช',
      unit: 'ูุฌูุน ุงููุฑุฏูุณ - ุดูุฉ 203'
    },
    {
      occupancy: '100%',
      return: '12,500 โช',
      unit: 'ูููุง ุงููุงุณููู'
    },
    {
      occupancy: '100%',
      return: '4,750 โช',
      unit: 'ุจุฑุฌ ุงูุณูุงู - ุดูุฉ 302'
    }
  ]

  const aiRecommendations = [
    {
      title: 'ุชุญุณูู ุงูุทุงูุฉ',
      description: 'ุชุฑููุจ ุฃููุงุญ ุดูุณูุฉ ูู ูุฌูุน ุงููุฑุฏูุณ ูุชูููู ุชูุงููู ุงูุทุงูุฉ.',
      icon: '/icons/ai-analytics.svg',
      tag: '24 ุดูุฑ : ROI',
      tagColor: 'yellow'
    },
    {
      title: 'ุชุญุณูู ุงูุตูุงูุฉ',
      description: 'ุชูููู ุชูุงููู ุงูุตูุงูุฉ ูู ุฎูุงู ุฌุฏููุฉ ุงูุตูุงูุฉ ุงูููุงุฆูุฉ ูููุญุฏุงุช ุงูุฃูุฏู.',
      icon: '/icons/ai-analytics.svg',
      tag: 'ุดูุฑูุงู 3,800 โช-',
      tagColor: 'blue'
    },
    {
      title: 'ุฒูุงุฏุฉ ุงูุฅูุฌุงุฑ',
      description: 'ุฒูุงุฏุฉ ุงูุฅูุฌุงุฑ ูู ุจุฑุฌ ุงูุณูุงู ุจูุณุจุฉ 5% ูุชุชูุงุดู ูุน ุฃุณุนุงุฑ ุงูุณูู ุงูุญุงููุฉ.',
      icon: '/icons/ai-analytics.svg',
      tag: 'ุดูุฑูุงู 6,250 โช+',
      tagColor: 'green'
    }
  ]

  const riskAnalysis = [
    {
      level: 'ุฎุทุฑ ุนุงูู',
      levelColor: 'red',
      action: 'ูุนุงูุฌุฉ ุงูุขู',
      description: '30 ูุญุฏุงุช ูู ุจุฑุฌ ุงูุณูุงู ุณุชูุชูู ุนููุฏูุง ุฎูุงู 3 ููู.',
      linkText: 'ูุนุงูุฌุฉ',
      linkColor: 'red'
    },
    {
      level: 'ุฎุทุฑ ูุชูุณุท',
      levelColor: 'orange',
      action: 'ุฎุทุฉ ุตูุงูุฉ',
      description: 'ููููุงุช ุงูููุงุก ูู ูุฌูุน ุงููุฑุฏูุณ ุชุญุชุงุฌ ุฅูู ุตูุงูุฉ ูุฑูุจุง.',
      linkText: 'ุฌุฏููุฉ',
      linkColor: 'orange'
    },
    {
      level: 'ุฎุทุฑ ููุฎูุถ',
      levelColor: 'blue',
      action: 'ูุฑุงูุจุฉ',
      description: 'ุฃุณุนุงุฑ ุงูุนูุงุฑุงุช ูู ููุทูุฉ ูููุง ุงููุงุณููู ูู ุงูุฎูุงุถ ุทููู.',
      linkText: 'ุชุญููู ุงูุณูู',
      linkColor: 'blue'
    }
  ]

  return (
    <div className={styles.propertyAnalyticsPage}>
      {/* Header */}
      <OwnerNavigation currentPage="property-analytics" />

      {/* Main Content */}
      <main className={styles.mainContent}>
        <div className={styles.container}>
          {/* AI Banner */}
          <div className={styles.aiBanner}>
            <div className={styles.aiBannerIcon}>
              <Image 
                src="/icons/ai-analytics.svg"
                alt="ุงูุฐูุงุก ุงูุงุตุทูุงุนู"
                width={30}
                height={30}
              />
            </div>
            <p className={styles.aiBannerText}>
              ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุชุดู ูุฑุตุฉ ูุฒูุงุฏุฉ ุงูุฅูุฑุงุฏุงุช ูู ุจุฑุฌ ุงูุณูุงู ุจูุณุจุฉ 2%
            </p>
            <button className={styles.closeBtn}>ร</button>
          </div>

          {/* Page Header */}
          <div className={styles.pageHeader}>
            <div className={styles.headerLeft}>
              <h1 className={styles.pageTitle}>ููุญุฉ ุชุญูููุงุช ุงูุนูุงุฑุงุช</h1>
              <p className={styles.lastUpdated}>ุขุฎุฑ ุชุญุฏูุซ: 28 ููููู 2025, 11:00 ุตุจุงุญูุง</p>
            </div>
            <button className={styles.filterBtn}>
              ุฅุถุงูุฉ ููุชุฑ <span>โผ</span>
            </button>
          </div>

          {/* Action Bar */}
          <div className={styles.actionBar}>
            <button className={styles.exportBtn}>
              ุชุตุฏูุฑ ุงูุชูุฑูุฑ <span>โผ</span>
            </button>
            <select className={styles.selectBtn}>
              <option>ุฌููุน ุงูุนูุงุฑุงุช</option>
            </select>
            <select className={styles.selectBtn}>
              <option>2025 ุงูุฑุจุน ุงูุซุงูุซ</option>
            </select>
          </div>

          {/* KPI Cards */}
          <div className={styles.kpiSection}>
            <div className={styles.kpiGrid}>
              {kpiData.map((kpi, index) => (
                <div key={index} className={styles.kpiCard}>
                  <h3 className={styles.kpiTitle}>
                    {kpi.title}
                    {kpi.hasInfo && <span className={styles.infoIcon}>i</span>}
                  </h3>
                  {kpi.badge && (
                    <span className={`${styles.kpiBadge} ${styles[kpi.badgeColor]}`}>
                      {kpi.badge}
                    </span>
                  )}
                  <div className={styles.kpiValue}>{kpi.value}</div>
                  <div className={`${styles.kpiChange} ${styles[kpi.changeColor]}`}>
                    {kpi.change}
                  </div>
                  {kpi.note && (
                    <p className={styles.kpiNote}>{kpi.note}</p>
                  )}
                  {kpi.progress && (
                    <div className={styles.progressBar}>
                      <div className={styles.progressFill} style={{width: `${kpi.progress}%`}}></div>
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>

          {/* Main Content Grid */}
          <div className={styles.contentGrid}>
            {/* Left Column */}
            <div className={styles.leftColumn}>
              {/* Best Units */}
              <div className={styles.sectionCard}>
                <div className={styles.sectionHeader}>
                  <h2 className={styles.sectionTitle}>ุฃูุถู ุงููุญุฏุงุช ุฃุฏุงุก</h2>
                  <a href="#" className={styles.viewAllLink}>ุนุฑุถ ุงููู</a>
                </div>
                
                <div className={styles.unitsTable}>
                  <div className={styles.tableHeader}>
                    <div>ุงูุฅุดุบุงู</div>
                    <div>ุงูุนุงุฆุฏ</div>
                    <div>ุงููุญุฏุฉ</div>
                  </div>
                  
                  {topUnits.map((unit, index) => (
                    <div key={index} className={styles.tableRow}>
                      <span className={styles.occupancyBadge}>100%</span>
                      <div className={styles.returnValue}>{unit.return}</div>
                      <div className={styles.unitName}>{unit.unit}</div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Revenue Forecast */}
              <div className={styles.sectionCard}>
                <div className={styles.sectionHeader}>
                  <h2 className={styles.sectionTitle}>ุชููุนุงุช ุงูุฅูุฑุงุฏุงุช ( 12 ุดูุฑ ูุงุฏู)</h2>
                  <div className={styles.headerActions}>
                    <span>โฏ</span>
                    <span>๐ฅ</span>
                  </div>
                </div>
                <div className={styles.chartPlaceholder}>
                  <p>ุณูุชู ุนุฑุถ ุงูุฑุณู ุงูุจูุงูู ููุง</p>
                </div>
              </div>
            </div>

            {/* Right Column */}
            <div className={styles.rightColumn}>
              {/* Occupancy by Property */}
              <div className={styles.sectionCard}>
                <div className={styles.sectionHeader}>
                  <h2 className={styles.sectionTitle}>ุงูุฅุดุบุงู ุญุณุจ ุงูุนูุงุฑ</h2>
                </div>
                <div className={styles.chartPlaceholder}>
                  <p>ุณูุชู ุนุฑุถ ุงูุฑุณู ุงูุจูุงูู ููุง</p>
                </div>
              </div>

              {/* AI Recommendations */}
              <div className={styles.sectionCard}>
                <div className={styles.sectionHeader}>
                  <div className={styles.titleWithIcon}>
                    <h2 className={styles.sectionTitle}>ุชูุตูุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุชุญุณูู ุงูุนุงุฆุฏ</h2>
                    <Image 
                      src="/icons/ai-analytics.svg"
                      alt="ุชูุตูุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู"
                      width={20}
                      height={20}
                    />
                  </div>
                </div>
                
                <div className={styles.recommendationsList}>
                  {aiRecommendations.map((rec, index) => (
                    <div key={index} className={styles.recommendationCard}>
                      <div className={styles.recHeader}>
                        <h3 className={styles.recTitle}>{rec.title}</h3>
                        <div className={styles.recIcon}>
                          <Image 
                            src={rec.icon}
                            alt={rec.title}
                            width={20}
                            height={20}
                          />
                        </div>
                      </div>
                      <p className={styles.recDescription}>{rec.description}</p>
                      <span className={`${styles.recTag} ${styles[rec.tagColor]}`}>
                        {rec.tag}
                      </span>
                    </div>
                  ))}
                </div>

                <button className={styles.executeAllBtn}>
                  ุชูููุฐ ุฌููุน ุงูุชูุตูุงุช
                </button>
              </div>
            </div>
          </div>

          {/* Risk Analysis */}
          <div className={styles.riskSection}>
            <h2 className={styles.sectionTitle}>ุชุญููู ุงููุฎุงุทุฑ</h2>
            
            <div className={styles.riskCards}>
              {riskAnalysis.map((risk, index) => (
                <div key={index} className={`${styles.riskCard} ${styles[risk.levelColor]}`}>
                  <div className={styles.riskHeader}>
                    <h3 className={styles.riskLevel}>{risk.level}</h3>
                    <span className={`${styles.actionBadge} ${styles[risk.levelColor]}`}>
                      {risk.action}
                    </span>
                  </div>
                  <p className={styles.riskDescription}>{risk.description}</p>
                  <a href="#" className={`${styles.riskLink} ${styles[risk.linkColor]}`}>
                    {risk.linkText} โ
                  </a>
                </div>
              ))}
            </div>
          </div>
        </div>
      </main>

      {/* Footer */}
      <Footer />
    </div>
  )
}
